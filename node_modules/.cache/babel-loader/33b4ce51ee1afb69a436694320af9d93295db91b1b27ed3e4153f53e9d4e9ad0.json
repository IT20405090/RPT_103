{"ast":null,"code":"import _toConsumableArray from\"D:/Research_Project/Component/Sample/RPT_103/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _regeneratorRuntime from\"D:/Research_Project/Component/Sample/RPT_103/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/Research_Project/Component/Sample/RPT_103/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _slicedToArray from\"D:/Research_Project/Component/Sample/RPT_103/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import'./styles/Chatbot.css';import delete_gif from'./images/trash-bin.gif';import search_gif from'./images/search.gif';import loading_gif from'./images/duck_loading.gif';import{toast}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ViewChat=function ViewChat(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),conversations=_useState2[0],setConversations=_useState2[1];var _useState3=useState(true),_useState4=_slicedToArray(_useState3,2),loading=_useState4[0],setLoading=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),searchText=_useState6[0],setSearchText=_useState6[1];// State variable for search input\n// Define the function to fetch chat data in the component scope\nvar fetchChatData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch('http://localhost:5000/api/getChats');case 3:response=_context.sent;if(response.ok){_context.next=6;break;}throw new Error('Network response was not ok');case 6:_context.next=8;return response.json();case 8:data=_context.sent;if(Array.isArray(data.conversations)){setConversations(data.conversations);setLoading(false);}else{console.error('Invalid data format:',data);}_context.next=15;break;case 12:_context.prev=12;_context.t0=_context[\"catch\"](0);console.error('Error fetching chat data:',_context.t0);case 15:case\"end\":return _context.stop();}},_callee,null,[[0,12]]);}));return function fetchChatData(){return _ref.apply(this,arguments);};}();useEffect(function(){// Call the function to fetch chat data when the component mounts\nfetchChatData();},[]);// The empty array ensures this effect runs once on mount\n//Delete function\nvar handleDeleteConversation=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(index){var isConfirmed,response,updatedConversations;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:isConfirmed=window.confirm('Are you sure you want to delete this conversation?');if(!isConfirmed){_context2.next=13;break;}_context2.prev=2;_context2.next=5;return fetch(\"http://localhost:5000/api/deleteConversation/\".concat(index),{method:'DELETE'});case 5:response=_context2.sent;if(response.ok){// Remove the deleted conversation from the state\nupdatedConversations=_toConsumableArray(conversations);updatedConversations.splice(index,1);setConversations(updatedConversations);// Display a success toast\ntoast.success('Conversation deleted successfully',{position:'top-center',// Set the position to 'top-center'\nautoClose:3000,// 3 seconds\nhideProgressBar:true,// Hide the progress bar\ncloseOnClick:true,// Close the toast when clicked\npauseOnHover:true,// Pause the auto-close on hover\ndraggable:true,// Allow dragging the toast\nbodyClassName:'custom-toast-body'// Apply a custom CSS class to the toast body\n});}else{console.error('Failed to delete conversation');toast.error('Failed to delete conversation',{position:'bottom-right',autoClose:3000});}_context2.next=13;break;case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](2);console.error('Error deleting conversation:',_context2.t0);toast.error('Error deleting conversation',{position:'bottom-right',autoClose:3000});case 13:case\"end\":return _context2.stop();}},_callee2,null,[[2,9]]);}));return function handleDeleteConversation(_x){return _ref2.apply(this,arguments);};}();// Function to generate a random light color\nvar getRandomLightColor=function getRandomLightColor(){var randomColor=function randomColor(){return Math.floor(Math.random()*100+155);};// Generate a random color between 155 and 255\nvar r=randomColor();var g=randomColor();var b=randomColor();return\"rgb(\".concat(r,\",\").concat(g,\",\").concat(b,\")\");};var filteredConversations=conversations.filter(function(conversation,index){if(searchText===''){// Display all conversations when search text is empty\nreturn true;}else if((index+1).toString()===searchText){// Display the conversation if it matches the search text\nreturn true;}return false;});return/*#__PURE__*/_jsxs(\"div\",{className:\"ViewPage\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"center\",{children:/*#__PURE__*/_jsx(\"h2\",{className:\"typing-header\",children:\"View Conversations\"})}),/*#__PURE__*/_jsx(Link,{to:\"/chatbot\",children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",class:\"btn btn-primary\",style:{backgroundColor:'#3895d3',color:'white',border:'white',width:'100px',height:'30px',fontSize:'15px'},children:[/*#__PURE__*/_jsx(\"i\",{class:\"far fa-arrow-alt-circle-left\"}),\"\\xA0Go Back\"]})})]}),\"\\xA0\\xA0\\xA0\\xA0\",/*#__PURE__*/_jsxs(\"center\",{children:[/*#__PURE__*/_jsx(\"input\",{className:\"search-bar\",type:\"text\",placeholder:\"Search Conversations By the Number\",value:searchText,onChange:function onChange(e){return setSearchText(e.target.value);},style:{fontSize:'12px'}}),/*#__PURE__*/_jsx(\"img\",{src:search_gif,alt:\"Search\",className:\"circle-avatar-search\"})]}),loading?/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"img\",{src:loading_gif,alt:\"Loading...\",className:\"avatar-loading\"})}):/*#__PURE__*/_jsx(\"div\",{children:filteredConversations.length>0?filteredConversations.map(function(conversation,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"conversation conversation-card\",style:{'--card-background-color':getRandomLightColor(),fontSize:'13px'}// Set a random background color\n,children:[/*#__PURE__*/_jsxs(\"h3\",{style:{fontSize:'20px'},children:[/*#__PURE__*/_jsx(\"button\",{onClick:function onClick(){return handleDeleteConversation(index);},className:\"delete-button\",children:/*#__PURE__*/_jsx(\"img\",{src:delete_gif,alt:\"Delete\",className:\"circle-avatar\"})}),\" \\xA0\\xA0\\xA0\\xA0\\xA0 Conversation \",index+1]}),/*#__PURE__*/_jsx(\"ul\",{children:conversation.map(function(message,i){return/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"User:\"}),\" \",message.text.user,/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"strong\",{children:\"Bot:\"}),\" \",message.text.bot]},i);})})]},index);}):/*#__PURE__*/_jsx(\"b\",{children:/*#__PURE__*/_jsx(\"p\",{style:{fontSize:'19px'},children:\"The conversation was not found!\"})})})]});};export default ViewChat;","map":{"version":3,"names":["React","useState","useEffect","Link","delete_gif","search_gif","loading_gif","toast","jsx","_jsx","jsxs","_jsxs","ViewChat","_useState","_useState2","_slicedToArray","conversations","setConversations","_useState3","_useState4","loading","setLoading","_useState5","_useState6","searchText","setSearchText","fetchChatData","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","response","data","wrap","_callee$","_context","prev","next","fetch","sent","ok","Error","json","Array","isArray","console","error","t0","stop","apply","arguments","handleDeleteConversation","_ref2","_callee2","index","isConfirmed","updatedConversations","_callee2$","_context2","window","confirm","concat","method","_toConsumableArray","splice","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","bodyClassName","_x","getRandomLightColor","randomColor","Math","floor","random","r","g","b","filteredConversations","filter","conversation","toString","className","children","to","type","class","style","backgroundColor","color","border","width","height","fontSize","placeholder","value","onChange","e","target","src","alt","length","map","onClick","message","i","text","user","bot"],"sources":["D:/Research_Project/Component/Sample/RPT_103/src/components/Chatbot_SkinRash/ViewChat.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles/Chatbot.css';\r\nimport delete_gif from './images/trash-bin.gif';\r\nimport search_gif from './images/search.gif';\r\nimport loading_gif from './images/duck_loading.gif'\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\n\r\nconst ViewChat = () => {\r\n  const [conversations, setConversations] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [searchText, setSearchText] = useState(''); // State variable for search input\r\n\r\n\r\n  \r\n\r\n\r\n  // Define the function to fetch chat data in the component scope\r\n  const fetchChatData = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/api/getChats');\r\n      if (!response.ok) {\r\n        throw new Error('Network response was not ok');\r\n      }\r\n      const data = await response.json();\r\n\r\n      if (Array.isArray(data.conversations)) {\r\n        setConversations(data.conversations);\r\n        setLoading(false);\r\n      } else {\r\n        console.error('Invalid data format:', data);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching chat data:', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Call the function to fetch chat data when the component mounts\r\n    fetchChatData();\r\n  }, []); // The empty array ensures this effect runs once on mount\r\n\r\n\r\n//Delete function\r\n  const handleDeleteConversation = async (index) => {\r\n  const isConfirmed = window.confirm('Are you sure you want to delete this conversation?');\r\n  \r\n  if (isConfirmed) {\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/api/deleteConversation/${index}`, {\r\n        method: 'DELETE',\r\n      });\r\n      if (response.ok) {\r\n        // Remove the deleted conversation from the state\r\n        const updatedConversations = [...conversations];\r\n        updatedConversations.splice(index, 1);\r\n        setConversations(updatedConversations);\r\n\r\n        // Display a success toast\r\n        toast.success('Conversation deleted successfully', {\r\n          position: 'top-center', // Set the position to 'top-center'\r\n          autoClose: 3000, // 3 seconds\r\n          hideProgressBar: true, // Hide the progress bar\r\n          closeOnClick: true, // Close the toast when clicked\r\n          pauseOnHover: true, // Pause the auto-close on hover\r\n          draggable: true, // Allow dragging the toast\r\n          bodyClassName: 'custom-toast-body', // Apply a custom CSS class to the toast body\r\n        \r\n        });\r\n      } else {\r\n        console.error('Failed to delete conversation');\r\n        toast.error('Failed to delete conversation', {\r\n          position: 'bottom-right',\r\n          autoClose: 3000,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error deleting conversation:', error);\r\n      toast.error('Error deleting conversation', {\r\n        position: 'bottom-right',\r\n        autoClose: 3000,\r\n      });\r\n    }\r\n  }\r\n};\r\n\r\n       // Function to generate a random light color\r\n       const getRandomLightColor = () => {\r\n        const randomColor = () => Math.floor(Math.random() * 100 + 155); // Generate a random color between 155 and 255\r\n        const r = randomColor();\r\n        const g = randomColor();\r\n        const b = randomColor();\r\n        return `rgb(${r},${g},${b})`;\r\n      };\r\n\r\n    \r\n\r\n      const filteredConversations = conversations.filter((conversation, index) => {\r\n        if (searchText === '') {\r\n          // Display all conversations when search text is empty\r\n          return true;\r\n        } else if ((index + 1).toString() === searchText) {\r\n          // Display the conversation if it matches the search text\r\n          return true;\r\n        }\r\n        return false;\r\n      });\r\n\r\n\r\n      \r\n      \r\n  return (\r\n    <div className='ViewPage'>\r\n\r\n     <div>\r\n\r\n     <center>\r\n      <h2 className='typing-header'>View Conversations</h2>\r\n     </center>\r\n\r\n     <Link to=\"/chatbot\"><button type=\"button\" class=\"btn btn-primary\" style={{backgroundColor:'#3895d3', color:'white', border:'white', width:'100px', height:'30px', fontSize:'15px'}} >\r\n        <i class=\"far fa-arrow-alt-circle-left\"></i>&nbsp;Go Back</button>\r\n      </Link>\r\n     </div>\r\n      \r\n     \r\n                      \r\n\r\n      &nbsp;&nbsp;&nbsp;&nbsp;\r\n      <center>\r\n      <input\r\n      className='search-bar'\r\n      type=\"text\"\r\n      placeholder=\"Search Conversations By the Number\"\r\n      value={searchText}\r\n      onChange={(e) => setSearchText(e.target.value)}\r\n      style={{fontSize:'12px'}}\r\n    />\r\n     \r\n    \r\n    <img src={search_gif} alt=\"Search\" className=\"circle-avatar-search\" />\r\n    </center>\r\n\r\n      {loading ? (\r\n        <div>\r\n          <img src={loading_gif} alt=\"Loading...\" className=\"avatar-loading\" />\r\n          </div>\r\n        \r\n      ) : (\r\n        <div>\r\n          {filteredConversations.length > 0 ? (\r\n          filteredConversations.map((conversation, index) => (\r\n         \r\n            <div\r\n              key={index}\r\n              className=\"conversation conversation-card\"\r\n              style={{ '--card-background-color': getRandomLightColor(), fontSize:'13px' }} // Set a random background color\r\n            >\r\n            \r\n\r\n            <h3 style={{fontSize:'20px'}}>\r\n              <button onClick={() => handleDeleteConversation(index)} className=\"delete-button\">\r\n                <img src={delete_gif} alt=\"Delete\" className=\"circle-avatar\" />\r\n              </button> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n              Conversation {index + 1}\r\n            </h3>\r\n          \r\n              <ul>\r\n                {conversation.map((message, i) => (\r\n                  <ul key={i}>\r\n                    <strong>User:</strong> {message.text.user}\r\n                    <br />\r\n                    <strong>Bot:</strong> {message.text.bot}\r\n                  </ul>\r\n                ))}\r\n              </ul>\r\n            </div>\r\n          ))\r\n          ):(<b><p style={{fontSize:'19px'}}>The conversation was not found!</p></b>)\r\n        }\r\n        </div>\r\n      )}\r\n     \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ViewChat;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}