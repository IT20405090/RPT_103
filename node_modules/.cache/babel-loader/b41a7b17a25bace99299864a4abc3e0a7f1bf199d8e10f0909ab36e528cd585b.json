{"ast":null,"code":"import _toConsumableArray from\"D:/Research_Project/Component/Sample/RPT_103/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"D:/Research_Project/Component/Sample/RPT_103/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState}from'react';import{Button}from'react-bootstrap';import{Link}from'react-router-dom';import'./styles/Chatbot.css';import user_avatar from'./images/user.gif';import bot_avatar from'./images/chatbot.gif';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Chatbot=function Chatbot(){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),userMessage=_useState2[0],setUserMessage=_useState2[1];var _useState3=useState([{text:'Hi! Im the User',avatar:user_avatar,// Use the imported user avatar image\nuser:true// Indicate that this message is from the user\n},{text:'Hi! Im the Bot',avatar:bot_avatar,// Use the imported bot avatar image\nuser:false// Indicate that this message is from the bot\n}]),_useState4=_slicedToArray(_useState3,2),botResponses=_useState4[0],setBotResponses=_useState4[1];var handleInputChange=function handleInputChange(e){setUserMessage(e.target.value);};function getCurrentTimestamp(){var now=new Date();var hours=now.getHours().toString().padStart(2,'0');var minutes=now.getMinutes().toString().padStart(2,'0');return\"\".concat(hours,\":\").concat(minutes);}var handleSendMessage=function handleSendMessage(){if(userMessage){// Send user message to the server (backend) for processing\nfetch('http://localhost:5000/api/chat',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({message:userMessage})}).then(function(response){return response.json();}).then(function(data){var botResponse=data.response;// Update bot responses with the response from the server\nsetBotResponses(function(prevBotResponses){return[].concat(_toConsumableArray(prevBotResponses),[{text:userMessage,timestamp:getCurrentTimestamp(),avatar:user_avatar,user:true},{text:botResponse,timestamp:getCurrentTimestamp(),avatar:bot_avatar,user:false}]);});setUserMessage('');// Check if the bot's response is \"chatbot exited\"\nif(botResponse.toLowerCase()===\"exit from the chatbot\"){// Reload the page after a short delay\nsetTimeout(function(){return window.location.reload();},2000);// Reload after 2 seconds (adjust the delay as needed)\n}}).catch(function(error){return console.error('Error:',error);});}};var handleKeyPress=function handleKeyPress(e){if(e.key==='Enter'){handleSendMessage();}};return/*#__PURE__*/_jsxs(\"div\",{className:\"Full-Chat\",children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-frame\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-container\",children:[/*#__PURE__*/_jsxs(Button,{size:\"lg\",className:\"quarter-button\",style:{borderRadius:'0',marginRight:'770px',marginTop:'7px',width:'100px'},href:\"/\",children:[\"  \",/*#__PURE__*/_jsx(\"i\",{class:\"far fa-arrow-alt-circle-left\"}),\"\\xA0Go Back\"]}),/*#__PURE__*/_jsx(Link,{to:\"/viewchat\",children:/*#__PURE__*/_jsxs(\"button\",{type:\"button\",class:\"btn btn-primary\",style:{backgroundColor:'#3895d3',color:'white',border:'white',width:'100px',height:'30px',fontSize:'15px'},children:[/*#__PURE__*/_jsx(\"i\",{class:\"fa-solid fa-bars\"}),\" \\xA0History\"]})}),/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"chatbot-messages\",children:botResponses.map(function(message,index){return/*#__PURE__*/_jsxs(\"div\",{className:\"Bubbles\",children:[/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsxs(\"div\",{className:index%2===0?'user-message':'bot-message',children:[/*#__PURE__*/_jsx(\"div\",{className:\"message-avatar\",children:/*#__PURE__*/_jsx(\"img\",{src:message.avatar})}),/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:message.text})]},index),/*#__PURE__*/_jsx(\"div\",{className:\"message-timestamp \".concat(index%2===0?'user-timestamp':'bot-timestamp'),children:message.timestamp})]},index);})})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-input\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Type your message... (Type 'exit' For New Conversation)\",value:userMessage,onChange:handleInputChange,onKeyPress:handleKeyPress// Listen for Enter key press\n,className:\"msg-input\",style:{fontSize:'15px'}}),/*#__PURE__*/_jsxs(\"button\",{className:\"send\",onClick:handleSendMessage,style:{width:'120px',fontSize:'15px'},children:[\"Send \\xA0\",/*#__PURE__*/_jsx(\"i\",{class:\"fa-solid fa-location-arrow\"})]})]})]})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"br\",{})]});};export default Chatbot;","map":{"version":3,"names":["React","useState","Button","Link","user_avatar","bot_avatar","jsx","_jsx","jsxs","_jsxs","Chatbot","_useState","_useState2","_slicedToArray","userMessage","setUserMessage","_useState3","text","avatar","user","_useState4","botResponses","setBotResponses","handleInputChange","e","target","value","getCurrentTimestamp","now","Date","hours","getHours","toString","padStart","minutes","getMinutes","concat","handleSendMessage","fetch","method","headers","body","JSON","stringify","message","then","response","json","data","botResponse","prevBotResponses","_toConsumableArray","timestamp","toLowerCase","setTimeout","window","location","reload","catch","error","console","handleKeyPress","key","className","children","size","style","borderRadius","marginRight","marginTop","width","href","class","to","type","backgroundColor","color","border","height","fontSize","map","index","src","placeholder","onChange","onKeyPress","onClick"],"sources":["D:/Research_Project/Component/Sample/RPT_103/src/components/Chatbot_SkinRash/Chatbot.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport './styles/Chatbot.css';\r\nimport user_avatar from './images/user.gif';\r\nimport bot_avatar from './images/chatbot.gif';\r\n\r\n\r\nconst Chatbot = () => {\r\n  const [userMessage, setUserMessage] = useState('');\r\n \r\n\r\n  const [botResponses, setBotResponses] = useState([\r\n    {\r\n      text: 'Hi! Im the User',\r\n      avatar: user_avatar, // Use the imported user avatar image\r\n      user: true, // Indicate that this message is from the user\r\n    },\r\n    {\r\n      text: 'Hi! Im the Bot',\r\n      avatar: bot_avatar, // Use the imported bot avatar image\r\n      user: false, // Indicate that this message is from the bot\r\n    },\r\n  ]);\r\n\r\n  \r\n\r\n  const handleInputChange = (e) => {\r\n    setUserMessage(e.target.value);\r\n  };\r\n\r\n  function getCurrentTimestamp() {\r\n    const now = new Date();\r\n    const hours = now.getHours().toString().padStart(2, '0');\r\n    const minutes = now.getMinutes().toString().padStart(2, '0');\r\n    return `${hours}:${minutes}`;\r\n  }\r\n\r\n \r\n\r\n  const handleSendMessage = () => {\r\n    if (userMessage) {\r\n      // Send user message to the server (backend) for processing\r\n      fetch('http://localhost:5000/api/chat', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ message: userMessage }),\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          const botResponse = data.response;\r\n\r\n          // Update bot responses with the response from the server\r\n          setBotResponses((prevBotResponses) => [\r\n            ...prevBotResponses,\r\n            {\r\n              text: userMessage,\r\n              timestamp: getCurrentTimestamp(),\r\n              avatar: user_avatar,\r\n              user: true,\r\n            },\r\n            {\r\n              text: botResponse,\r\n              timestamp: getCurrentTimestamp(),\r\n              avatar: bot_avatar,\r\n              user: false,\r\n            },\r\n          ]);\r\n          setUserMessage('');\r\n\r\n     \r\n\r\n          // Check if the bot's response is \"chatbot exited\"\r\n          if (botResponse.toLowerCase() === \"exit from the chatbot\") {\r\n            // Reload the page after a short delay\r\n            setTimeout(() => window.location.reload(), 2000); // Reload after 2 seconds (adjust the delay as needed)\r\n          }\r\n        })\r\n        .catch((error) => console.error('Error:', error));\r\n    }\r\n  };\r\n\r\n\r\n  const handleKeyPress = (e) => {\r\n    if (e.key === 'Enter') {\r\n      handleSendMessage();\r\n    }\r\n  };\r\n\r\n  \r\n\r\n\r\n\r\n  return (\r\n    <div className='Full-Chat'>\r\n      <br/>\r\n\r\n      <div className='chat-frame'>\r\n      \r\n          <div className=\"chatbot-container\">\r\n\r\n            <Button  size=\"lg\" className=\"quarter-button\" \r\n            style={{ borderRadius: '0', marginRight:'770px', marginTop:'7px', width:'100px' }} href=\"/\">  <i class=\"far fa-arrow-alt-circle-left\"></i>&nbsp;Go Back\r\n            </Button>\r\n\r\n            <Link to=\"/viewchat\"><button type=\"button\" class=\"btn btn-primary\" style={{backgroundColor:'#3895d3', color:'white', border:'white', width:'100px', height:'30px', fontSize:'15px'}} >\r\n            <i class=\"fa-solid fa-bars\"></i> &nbsp;History</button>\r\n            </Link>\r\n\r\n          <div className=\"chat-messages-container\" >\r\n\r\n          <div className=\"chatbot-messages\">\r\n              {botResponses.map((message, index) => (\r\n                <div className='Bubbles' key={index}>\r\n                  <br /><br/>\r\n                  <div key={index} className={index % 2 === 0 ? 'user-message' : 'bot-message'}>\r\n                    \r\n                    <div className=\"message-avatar\">\r\n                      \r\n                      <img\r\n                        src={message.avatar}\r\n                        \r\n                      />\r\n                    </div>\r\n                    <div className=\"message-text\">{message.text}</div>\r\n                  </div>\r\n                  <div className={`message-timestamp ${index % 2 === 0 ? 'user-timestamp' : 'bot-timestamp'}`}>\r\n                    {message.timestamp}\r\n                  </div>\r\n                </div>\r\n                \r\n              ))}\r\n              \r\n            </div>\r\n            </div>\r\n\r\n            <div className=\"chatbot-input\">\r\n              <input\r\n                type=\"text\"\r\n                placeholder=\"Type your message... (Type 'exit' For New Conversation)\"\r\n                value={userMessage}\r\n                onChange={handleInputChange}\r\n                onKeyPress={handleKeyPress} // Listen for Enter key press\r\n                className='msg-input'\r\n                style={{fontSize:'15px'}}\r\n              />\r\n              <button className='send' onClick={handleSendMessage} style={{width:'120px', fontSize:'15px'}} >\r\n                Send &nbsp;<i class=\"fa-solid fa-location-arrow\"></i>\r\n              </button>\r\n              \r\n            </div>\r\n\r\n          </div>\r\n          </div>\r\n          <br/><br/>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"4QAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,MAAM,KAAQ,iBAAiB,CACxC,OAASC,IAAI,KAAQ,kBAAkB,CACvC,MAAO,sBAAsB,CAC7B,MAAO,CAAAC,WAAW,KAAM,mBAAmB,CAC3C,MAAO,CAAAC,UAAU,KAAM,sBAAsB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAG9C,GAAM,CAAAC,OAAO,CAAG,QAAV,CAAAA,OAAOA,CAAA,CAAS,CACpB,IAAAC,SAAA,CAAsCV,QAAQ,CAAC,EAAE,CAAC,CAAAW,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAA3CG,WAAW,CAAAF,UAAA,IAAEG,cAAc,CAAAH,UAAA,IAGlC,IAAAI,UAAA,CAAwCf,QAAQ,CAAC,CAC/C,CACEgB,IAAI,CAAE,iBAAiB,CACvBC,MAAM,CAAEd,WAAW,CAAE;AACrBe,IAAI,CAAE,IAAM;AACd,CAAC,CACD,CACEF,IAAI,CAAE,gBAAgB,CACtBC,MAAM,CAAEb,UAAU,CAAE;AACpBc,IAAI,CAAE,KAAO;AACf,CAAC,CACF,CAAC,CAAAC,UAAA,CAAAP,cAAA,CAAAG,UAAA,IAXKK,YAAY,CAAAD,UAAA,IAAEE,eAAe,CAAAF,UAAA,IAepC,GAAM,CAAAG,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAIC,CAAC,CAAK,CAC/BT,cAAc,CAACS,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAChC,CAAC,CAED,QAAS,CAAAC,mBAAmBA,CAAA,CAAG,CAC7B,GAAM,CAAAC,GAAG,CAAG,GAAI,CAAAC,IAAI,CAAC,CAAC,CACtB,GAAM,CAAAC,KAAK,CAAGF,GAAG,CAACG,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CACxD,GAAM,CAAAC,OAAO,CAAGN,GAAG,CAACO,UAAU,CAAC,CAAC,CAACH,QAAQ,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,CAAE,GAAG,CAAC,CAC5D,SAAAG,MAAA,CAAUN,KAAK,MAAAM,MAAA,CAAIF,OAAO,EAC5B,CAIA,GAAM,CAAAG,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAA,CAAS,CAC9B,GAAIvB,WAAW,CAAE,CACf;AACAwB,KAAK,CAAC,gCAAgC,CAAE,CACtCC,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CAAEC,OAAO,CAAE9B,WAAY,CAAC,CAC/C,CAAC,CAAC,CACC+B,IAAI,CAAC,SAACC,QAAQ,QAAK,CAAAA,QAAQ,CAACC,IAAI,CAAC,CAAC,GAAC,CACnCF,IAAI,CAAC,SAACG,IAAI,CAAK,CACd,GAAM,CAAAC,WAAW,CAAGD,IAAI,CAACF,QAAQ,CAEjC;AACAxB,eAAe,CAAC,SAAC4B,gBAAgB,WAAAd,MAAA,CAAAe,kBAAA,CAC5BD,gBAAgB,GACnB,CACEjC,IAAI,CAAEH,WAAW,CACjBsC,SAAS,CAAEzB,mBAAmB,CAAC,CAAC,CAChCT,MAAM,CAAEd,WAAW,CACnBe,IAAI,CAAE,IACR,CAAC,CACD,CACEF,IAAI,CAAEgC,WAAW,CACjBG,SAAS,CAAEzB,mBAAmB,CAAC,CAAC,CAChCT,MAAM,CAAEb,UAAU,CAClBc,IAAI,CAAE,KACR,CAAC,IACF,CAAC,CACFJ,cAAc,CAAC,EAAE,CAAC,CAIlB;AACA,GAAIkC,WAAW,CAACI,WAAW,CAAC,CAAC,GAAK,uBAAuB,CAAE,CACzD;AACAC,UAAU,CAAC,iBAAM,CAAAC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,GAAE,IAAI,CAAC,CAAE;AACpD,CACF,CAAC,CAAC,CACDC,KAAK,CAAC,SAACC,KAAK,QAAK,CAAAC,OAAO,CAACD,KAAK,CAAC,QAAQ,CAAEA,KAAK,CAAC,GAAC,CACrD,CACF,CAAC,CAGD,GAAM,CAAAE,cAAc,CAAG,QAAjB,CAAAA,cAAcA,CAAIrC,CAAC,CAAK,CAC5B,GAAIA,CAAC,CAACsC,GAAG,GAAK,OAAO,CAAE,CACrBzB,iBAAiB,CAAC,CAAC,CACrB,CACF,CAAC,CAMD,mBACE5B,KAAA,QAAKsD,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBzD,IAAA,QAAI,CAAC,cAELA,IAAA,QAAKwD,SAAS,CAAC,YAAY,CAAAC,QAAA,cAEvBvD,KAAA,QAAKsD,SAAS,CAAC,mBAAmB,CAAAC,QAAA,eAEhCvD,KAAA,CAACP,MAAM,EAAE+D,IAAI,CAAC,IAAI,CAACF,SAAS,CAAC,gBAAgB,CAC7CG,KAAK,CAAE,CAAEC,YAAY,CAAE,GAAG,CAAEC,WAAW,CAAC,OAAO,CAAEC,SAAS,CAAC,KAAK,CAAEC,KAAK,CAAC,OAAQ,CAAE,CAACC,IAAI,CAAC,GAAG,CAAAP,QAAA,EAAC,IAAE,cAAAzD,IAAA,MAAGiE,KAAK,CAAC,8BAA8B,CAAI,CAAC,cAC1I,EAAQ,CAAC,cAETjE,IAAA,CAACJ,IAAI,EAACsE,EAAE,CAAC,WAAW,CAAAT,QAAA,cAACvD,KAAA,WAAQiE,IAAI,CAAC,QAAQ,CAACF,KAAK,CAAC,iBAAiB,CAACN,KAAK,CAAE,CAACS,eAAe,CAAC,SAAS,CAAEC,KAAK,CAAC,OAAO,CAAEC,MAAM,CAAC,OAAO,CAAEP,KAAK,CAAC,OAAO,CAAEQ,MAAM,CAAC,MAAM,CAAEC,QAAQ,CAAC,MAAM,CAAE,CAAAf,QAAA,eACpLzD,IAAA,MAAGiE,KAAK,CAAC,kBAAkB,CAAI,CAAC,eAAc,EAAQ,CAAC,CACjD,CAAC,cAETjE,IAAA,QAAKwD,SAAS,CAAC,yBAAyB,CAAAC,QAAA,cAExCzD,IAAA,QAAKwD,SAAS,CAAC,kBAAkB,CAAAC,QAAA,CAC5B3C,YAAY,CAAC2D,GAAG,CAAC,SAACpC,OAAO,CAAEqC,KAAK,qBAC/BxE,KAAA,QAAKsD,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBzD,IAAA,QAAK,CAAC,cAAAA,IAAA,QAAI,CAAC,cACXE,KAAA,QAAiBsD,SAAS,CAAEkB,KAAK,CAAG,CAAC,GAAK,CAAC,CAAG,cAAc,CAAG,aAAc,CAAAjB,QAAA,eAE3EzD,IAAA,QAAKwD,SAAS,CAAC,gBAAgB,CAAAC,QAAA,cAE7BzD,IAAA,QACE2E,GAAG,CAAEtC,OAAO,CAAC1B,MAAO,CAErB,CAAC,CACC,CAAC,cACNX,IAAA,QAAKwD,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAEpB,OAAO,CAAC3B,IAAI,CAAM,CAAC,GAT1CgE,KAUL,CAAC,cACN1E,IAAA,QAAKwD,SAAS,sBAAA3B,MAAA,CAAuB6C,KAAK,CAAG,CAAC,GAAK,CAAC,CAAG,gBAAgB,CAAG,eAAe,CAAG,CAAAjB,QAAA,CACzFpB,OAAO,CAACQ,SAAS,CACf,CAAC,GAfsB6B,KAgBzB,CAAC,EAEP,CAAC,CAEC,CAAC,CACD,CAAC,cAENxE,KAAA,QAAKsD,SAAS,CAAC,eAAe,CAAAC,QAAA,eAC5BzD,IAAA,UACEmE,IAAI,CAAC,MAAM,CACXS,WAAW,CAAC,yDAAyD,CACrEzD,KAAK,CAAEZ,WAAY,CACnBsE,QAAQ,CAAE7D,iBAAkB,CAC5B8D,UAAU,CAAExB,cAAgB;AAAA,CAC5BE,SAAS,CAAC,WAAW,CACrBG,KAAK,CAAE,CAACa,QAAQ,CAAC,MAAM,CAAE,CAC1B,CAAC,cACFtE,KAAA,WAAQsD,SAAS,CAAC,MAAM,CAACuB,OAAO,CAAEjD,iBAAkB,CAAC6B,KAAK,CAAE,CAACI,KAAK,CAAC,OAAO,CAAES,QAAQ,CAAC,MAAM,CAAE,CAAAf,QAAA,EAAE,WAClF,cAAAzD,IAAA,MAAGiE,KAAK,CAAC,4BAA4B,CAAI,CAAC,EAC/C,CAAC,EAEN,CAAC,EAEH,CAAC,CACD,CAAC,cACNjE,IAAA,QAAI,CAAC,cAAAA,IAAA,QAAI,CAAC,EACX,CAAC,CAEV,CAAC,CAED,cAAe,CAAAG,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}