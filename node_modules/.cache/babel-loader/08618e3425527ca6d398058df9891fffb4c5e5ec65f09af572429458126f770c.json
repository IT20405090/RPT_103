{"ast":null,"code":"import _regeneratorRuntime from\"D:/Research_Project/Component/Sample/RPT_103/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"D:/Research_Project/Component/Sample/RPT_103/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";//backend flask app URL\nvar API_URL=\"http://localhost:5000\";export var uploadImageNormalAbnormal=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(formData){var response,data;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return fetch(\"\".concat(API_URL,\"/predict_normal_abnormal_skin\"),{method:\"POST\",body:formData});case 3:response=_context.sent;_context.next=6;return response.json();case 6:data=_context.sent;return _context.abrupt(\"return\",data);case 10:_context.prev=10;_context.t0=_context[\"catch\"](0);console.error(\"Error uploading image for normal/abnormal prediction:\",_context.t0);case 13:case\"end\":return _context.stop();}},_callee,null,[[0,10]]);}));return function uploadImageNormalAbnormal(_x){return _ref.apply(this,arguments);};}();export var uploadImageSkinRashType=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(formData){var response,data;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return fetch(\"\".concat(API_URL,\"/predict_skin_rash_type\"),{method:\"POST\",body:formData});case 3:response=_context2.sent;_context2.next=6;return response.json();case 6:data=_context2.sent;return _context2.abrupt(\"return\",data);case 10:_context2.prev=10;_context2.t0=_context2[\"catch\"](0);console.error(\"Error uploading image for skin rash type prediction:\",_context2.t0);case 13:case\"end\":return _context2.stop();}},_callee2,null,[[0,10]]);}));return function uploadImageSkinRashType(_x2){return _ref2.apply(this,arguments);};}();","map":{"version":3,"names":["API_URL","uploadImageNormalAbnormal","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","formData","response","data","wrap","_callee$","_context","prev","next","fetch","concat","method","body","sent","json","abrupt","t0","console","error","stop","_x","apply","arguments","uploadImageSkinRashType","_ref2","_callee2","_callee2$","_context2","_x2"],"sources":["D:/Research_Project/Component/Sample/RPT_103/src/api_skinRash.js"],"sourcesContent":["//backend flask app URL\r\nconst API_URL = \"http://localhost:5000\"; \r\n\r\n\r\nexport const uploadImageNormalAbnormal = async (formData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/predict_normal_abnormal_skin`, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error uploading image for normal/abnormal prediction:\", error);\r\n  }\r\n};\r\n\r\nexport const uploadImageSkinRashType = async (formData) => {\r\n  try {\r\n    const response = await fetch(`${API_URL}/predict_skin_rash_type`, {\r\n      method: \"POST\",\r\n      body: formData,\r\n    });\r\n    const data = await response.json();\r\n    return data;\r\n  } catch (error) {\r\n    console.error(\"Error uploading image for skin rash type prediction:\", error);\r\n  }\r\n};\r\n"],"mappings":"oRAAA;AACA,GAAM,CAAAA,OAAO,CAAG,uBAAuB,CAGvC,MAAO,IAAM,CAAAC,yBAAyB,6BAAAC,IAAA,CAAAC,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAAC,QAAOC,QAAQ,MAAAC,QAAA,CAAAC,IAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAC,SAAAC,QAAA,iBAAAA,QAAA,CAAAC,IAAA,CAAAD,QAAA,CAAAE,IAAA,SAAAF,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA,SAE7B,CAAAC,KAAK,IAAAC,MAAA,CAAIhB,OAAO,kCAAiC,CACtEiB,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEX,QACR,CAAC,CAAC,QAHIC,QAAQ,CAAAI,QAAA,CAAAO,IAAA,CAAAP,QAAA,CAAAE,IAAA,SAIK,CAAAN,QAAQ,CAACY,IAAI,CAAC,CAAC,QAA5BX,IAAI,CAAAG,QAAA,CAAAO,IAAA,QAAAP,QAAA,CAAAS,MAAA,UACHZ,IAAI,UAAAG,QAAA,CAAAC,IAAA,IAAAD,QAAA,CAAAU,EAAA,CAAAV,QAAA,aAEXW,OAAO,CAACC,KAAK,CAAC,uDAAuD,CAAAZ,QAAA,CAAAU,EAAO,CAAC,CAAC,yBAAAV,QAAA,CAAAa,IAAA,MAAAnB,OAAA,iBAEjF,kBAXY,CAAAL,yBAAyBA,CAAAyB,EAAA,SAAAxB,IAAA,CAAAyB,KAAA,MAAAC,SAAA,OAWrC,CAED,MAAO,IAAM,CAAAC,uBAAuB,6BAAAC,KAAA,CAAA3B,iBAAA,cAAAC,mBAAA,GAAAC,IAAA,CAAG,SAAA0B,SAAOxB,QAAQ,MAAAC,QAAA,CAAAC,IAAA,QAAAL,mBAAA,GAAAM,IAAA,UAAAsB,UAAAC,SAAA,iBAAAA,SAAA,CAAApB,IAAA,CAAAoB,SAAA,CAAAnB,IAAA,SAAAmB,SAAA,CAAApB,IAAA,GAAAoB,SAAA,CAAAnB,IAAA,SAE3B,CAAAC,KAAK,IAAAC,MAAA,CAAIhB,OAAO,4BAA2B,CAChEiB,MAAM,CAAE,MAAM,CACdC,IAAI,CAAEX,QACR,CAAC,CAAC,QAHIC,QAAQ,CAAAyB,SAAA,CAAAd,IAAA,CAAAc,SAAA,CAAAnB,IAAA,SAIK,CAAAN,QAAQ,CAACY,IAAI,CAAC,CAAC,QAA5BX,IAAI,CAAAwB,SAAA,CAAAd,IAAA,QAAAc,SAAA,CAAAZ,MAAA,UACHZ,IAAI,UAAAwB,SAAA,CAAApB,IAAA,IAAAoB,SAAA,CAAAX,EAAA,CAAAW,SAAA,aAEXV,OAAO,CAACC,KAAK,CAAC,sDAAsD,CAAAS,SAAA,CAAAX,EAAO,CAAC,CAAC,yBAAAW,SAAA,CAAAR,IAAA,MAAAM,QAAA,iBAEhF,kBAXY,CAAAF,uBAAuBA,CAAAK,GAAA,SAAAJ,KAAA,CAAAH,KAAA,MAAAC,SAAA,OAWnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}